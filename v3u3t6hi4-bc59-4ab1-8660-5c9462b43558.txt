Connectivity is an amazing thing. By now we're all used to the instinct connectivity that puts the world at our fingertips from desktops or devices. We can purchase, post, pin and pick anything anywhere we are connected to the world and each other like never before. But how does it happen? How does data get from here to there? How do different devices and applications connect with each other to allow us to place an order, make a reservation, or book a flight with just a few tests or clicks? The unsung hero of our connected world is the Application Programming Interface or API. It's the engine under the hood and is behind the scenes that we take for granted. But it's what makes possible all the interactivity we've come to expect and rely upon. But exactly what is an API? It's a question everyone asks. Okay, not really, but we're glad you did. The textbook definition goes something like this in computer programming and Application Programming interface. Api is a set of Retes protocols into the fed upon Internet operations inputs outputs like O to speak plainly, an API is the messenger that takes requests and tells a system what you want to do and then returns the response back to you to give you a familiar example, think of an API as a waiter in a restaurant. Imagine you're sitting at the table with a menu of choices to order from, and the kitchen is the part of the system which will prepare your order. What's missing is the critical link to communicate your order to the kitchen and deliver your food back to your table. That's where the waiter or API comes in. The waiter is the messenger that takes your request or order and tells the system, in this case the kitchen what to do and then delivers the response back to you. In this case, food. Now that we've wetted your appetite, let's apply this to a real API example. You are probably familiar with the process of searching for airline flights online. Just like at a restaurant, you have a menu of options to choose from a drop down menu. In this case, you choose a departure, city and date, a return, city and date, cabin class, and other variables. In order to book your flight, you interact with the Airlines website to access the Airlines database to see if any seats are available on those dates and what the cost might be faced on certain variables. But what if you're not using the Airlines website, which has direct access to the information? What if you are using an online travel service that aggregates information from many different Airlines? The travel service interacts with the Airlines API. The API is an interface that, like your helpful war, can be asked by that online travel service to get information from the airline system over the Internet to book seats, choose meal preferences or baggage options. It also then takes the Airlines response to request and delivers it right back to the online travel service, which then shows it to you. So now you can see that it's API's that make it possible for us all to use travel sites. The same goes for all interactions between applications, data, and devices. They all have APIs that allow computers to operate them, and that's what ultimately creates connectivity. So whenever you think of an API, just think of it as your waiter running back and forth between applications, databases, and devices to deliver data and create the connectivity that puts the world at our fingertips. And whenever you think of creating an API, think MuleSoft.